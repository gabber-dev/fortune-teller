import { SDKConnectionState, SDKSessionTranscription, SDKAgentState, SDKSendChatMessageParams, SDKConnectOptions, Api } from 'gabber-client-core';
import React from 'react';

type RealtimeSessionEngineContextData = {
    id: string | null;
    connectionState: SDKConnectionState;
    messages: SDKSessionTranscription[];
    lastError: {
        message: string;
    } | null;
    microphoneEnabled: boolean;
    agentVolumeBands: number[];
    agentVolume: number;
    userVolumeBands: number[];
    userVolume: number;
    agentState: SDKAgentState;
    remainingSeconds: number | null;
    transcription: {
        text: string;
        final: boolean;
    };
    canPlayAudio: boolean;
    setMicrophoneEnabled: (enabled: boolean) => Promise<void>;
    sendChatMessage: (p: SDKSendChatMessageParams) => Promise<void>;
    startAudio: () => Promise<void>;
};
type Props$1 = {
    connectionOpts: SDKConnectOptions | null;
    children: React.ReactNode;
};
declare function RealtimeSessionEngineProvider({ connectionOpts, children }: Props$1): React.JSX.Element;
declare function useRealtimeSessionEngine(): RealtimeSessionEngineContextData;

type ApiContextData = {
    api: Api;
};
type Props = {
    usageToken: string;
    children: React.ReactNode;
};
declare function ApiProvider({ usageToken, children }: Props): React.JSX.Element;
declare function useApi(): ApiContextData;

export { ApiProvider, RealtimeSessionEngineProvider, useApi, useRealtimeSessionEngine };
